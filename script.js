const video = document.getElementById('video');const canvas = document.getElementById('canvas');const context = canvas.getContext('2d');const colorDisplay = document.getElementById('colorDisplay');const colorCode = document.getElementById('colorCode');const captureButton = document.getElementById('captureButton');// Get access to the cameranavigator.mediaDevices.getUserMedia({ video: true })    .then(stream => {        video.srcObject = stream;    })    .catch(error => {        console.error("Error accessing camera: ", error);    });function getPredominantColor(imageData) {    const length = imageData.data.length;    const colorCount = {};    let predominantColor = '';    let maxCount = 0;    for (let i = 0; i < length; i += 4) {        const r = imageData.data[i];        const g = imageData.data[i + 1];        const b = imageData.data[i + 2];        const colorKey = `${r},${g},${b}`;        if (colorCount[colorKey]) {            colorCount[colorKey]++;        } else {            colorCount[colorKey] = 1;        }        if (colorCount[colorKey] > maxCount) {            maxCount = colorCount[colorKey];            predominantColor = colorKey;        }    }    return `rgb(${predominantColor})`;}captureButton.addEventListener('click', () => {    // Set canvas dimensions    canvas.width = video.videoWidth;    canvas.height = video.videoHeight;        // Draw the video frame to the canvas    context.drawImage(video, 0, 0, canvas.width, canvas.height);        // Get image data from the canvas    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);        // Get the predominant color    const predominantColor = getPredominantColor(imageData);        // Display the predominant color    colorDisplay.style.backgroundColor = predominantColor;    colorCode.textContent = `Predominant Color: ${predominantColor}`;});